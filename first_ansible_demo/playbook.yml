---
- hosts: all
  become: true
  tasks:
    - name: Ensure NTP (for time sync) is installed
      yum:
        use_backend: auto # not required. choices: auto;yum;yum4;dnf. This module supports C(yum) (as it always has), this is known as C(yum3)/C(YUM3)/C(yum-deprecated) by upstream yum developers. As of Ansible 2.7+, this module also supports C(YUM4), which is the "new yum" and it has an C(dnf) backend. By default, this module will select the backend based on the C(ansible_pkg_mgr) fact.
        name: ntp # not required. A package name or package specifier with version, like C(name-1.0). If a previous version is specified, the task also needs to turn C(allow_downgrade) on. See the C(allow_downgrade) documentation for caveats with downgrading packages. When using state=latest, this can be C('*') which means run C(yum -y update). You can also pass a url or a local path to a rpm file (using state=present). To operate on several packages this can accept a comma separated string of packages or (as of 2.0) a list of packages.
        state: present # not required. choices: absent;installed;latest;present;removed. Whether to install (C(present) or C(installed), C(latest)), or remove (C(absent) or C(removed)) a package. C(present) and C(installed) will simply ensure that a desired package is installed. C(latest) will update the specified package if it's not of the latest available version. C(absent) and C(removed) will remove the specified package. Default is C(None), however in effect the default action is C(present) unless the C(autoremove) option is enabled for this module, then C(absent) is inferred.
    - name: Ensure NTP is running
      service:
        name: ntpd # required. Name of the service.
        state: started # not required. choices: reloaded;restarted;started;stopped. C(started)/C(stopped) are idempotent actions that will not run commands unless necessary. C(restarted) will always bounce the service. C(reloaded) will always reload. B(At least one of state and enabled are required.) Note that reloaded will start the service if it is not already started, even if your chosen init system wouldn't normally.
        enabled: yes # not required. Whether the service should start on boot. B(At least one of state and enabled are required.)
